import React, { useState } from "react";
import { StyleSheet, View, Text, SafeAreaView, Image, Alert } from "react-native";
import { Input, Button } from "react-native-elements";
import { supabase } from "../supabase/supabaseClient";

const SignupScreen = () => {
  const [focusedInput, setFocusedInput] = useState(null);
  const [fullname, setFullname] = useState("");
  const [email, setEmail] = useState("");
  const [password, setPassword] = useState("");
  const [confirm, setConfirm] = useState("");

  const commonInputContainerStyle = {
    borderBottomWidth: 0,
    height: 30,
  };

  // âœ… Supabase signup logic
  const handleSignup = async () => {
    if (!fullname || !email || !password || !confirm) {
      Alert.alert("Error", "Please fill in all fields");
      return;
    }

    if (password !== confirm) {
      Alert.alert("Error", "Passwords do not match!");
      return;
    }

    const { data, error } = await supabase.auth.signUp({
      email,
      password,
      options: {
        data: { fullname }, // stored in user_metadata
      },
    });

    if (error) {
      Alert.alert("Signup error", error.message);
    } else {
      Alert.alert(
        "Success",
        "Account created! Please check your email to confirm your account."
      );
    }
  };

  return (
    <SafeAreaView style={styles.container}>
      <Image
        source={require("../assets/Museo_Logo.png")}
        style={styles.logo}
      />
      <Text style={styles.title}>Create an account</Text>
      <Text style={styles.subtitle}>
        Enter your details to create a new account
      </Text>

      {/* Full Name */}
      <View style={styles.inputWrapper}>
        {!fullname && <Text style={styles.placeholderText}>Full Name</Text>}
        <Input
          value={fullname}
          onChangeText={setFullname}
          containerStyle={[
            styles.inputContainer,
            focusedInput === "fullname" && styles.focusedContainer,
          ]}
          inputContainerStyle={commonInputContainerStyle}
          inputStyle={styles.inputStyle}
          onFocus={() => setFocusedInput("fullname")}
          onBlur={() => setFocusedInput(null)}
        />
      </View>

      {/* Email */}
      <View style={styles.inputWrapper}>
        {!email && <Text style={styles.placeholderText}>Email</Text>}
        <Input
          value={email}
          onChangeText={setEmail}
          keyboardType="email-address"
          autoCapitalize="none"
          containerStyle={[
            styles.inputContainer,
            focusedInput === "email" && styles.focusedContainer,
          ]}
          inputContainerStyle={commonInputContainerStyle}
          inputStyle={styles.inputStyle}
          onFocus={() => setFocusedInput("email")}
          onBlur={() => setFocusedInput(null)}
        />
      </View>

      {/* Password */}
      <View style={styles.inputWrapper}>
        {!password && <Text style={styles.placeholderText}>Password</Text>}
        <Input
          value={password}
          onChangeText={setPassword}
          secureTextEntry
          containerStyle={[
            styles.inputContainer,
            focusedInput === "password" && styles.focusedContainer,
          ]}
          inputContainerStyle={commonInputContainerStyle}
          inputStyle={styles.inputStyle}
          onFocus={() => setFocusedInput("password")}
          onBlur={() => setFocusedInput(null)}
        />
      </View>

      {/* Confirm Password */}
      <View style={styles.inputWrapper}>
        {!confirm && <Text style={styles.placeholderText}>Confirm Password</Text>}
        <Input
          value={confirm}
          onChangeText={setConfirm}
          secureTextEntry
          containerStyle={[
            styles.inputContainer,
            focusedInput === "confirm" && styles.focusedContainer,
          ]}
          inputContainerStyle={commonInputContainerStyle}
          inputStyle={styles.inputStyle}
          onFocus={() => setFocusedInput("confirm")}
          onBlur={() => setFocusedInput(null)}
        />
      </View>

      <Button
        title="Create Account"
        onPress={handleSignup}
        buttonStyle={styles.createButton}
        titleStyle={styles.createButtonTitle}
        containerStyle={styles.createButtonContainer}
      />
    </SafeAreaView>
  );
};

const styles = StyleSheet.create({
  container: {
    flex: 1,
    alignItems: "center",
    backgroundColor: "#fff",
    paddingHorizontal: 30,
    paddingTop: 60,
  },
  logo: {
    width: 200,
    height: 100,
    resizeMode: "contain",
    marginTop: 50,
    marginBottom: 30,
  },
  title: {
    fontSize: 22,
    fontWeight: "bold",
    color: "#000",
    marginBottom: 8,
  },
  subtitle: {
    fontSize: 14,
    color: "#888",
    textAlign: "center",
    marginBottom: 30,
  },
  inputWrapper: {
    width: "100%",
    position: "relative",
  },
  placeholderText: {
    position: "absolute",
    top: 17,
    left: 15,
    color: "#888",
    zIndex: 1,
  },
  inputContainer: {
    width: "100%",
    marginBottom: 15,
    borderWidth: 1,
    borderColor: "#ccc",
    borderRadius: 8,
    backgroundColor: "#fff",
    paddingHorizontal: 5,
  },
  focusedContainer: {
    borderColor: "#000",
    borderWidth: 2,
  },
  inputStyle: {
    fontSize: 18,
    color: "#000",
    top: 12,
    textAlignVertical: "center",
  },
  createButtonContainer: {
    width: "100%",
  },
  createButton: {
    backgroundColor: "#fff",
    borderRadius: 30,
    paddingVertical: 15,
    borderWidth: 1,
    borderColor: "#000",
  },
  createButtonTitle: {
    fontSize: 18,
    fontWeight: "bold",
    color: "#000",
  },
});

export default SignupScreen;
